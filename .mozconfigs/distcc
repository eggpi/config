CC="clang -target x86_64-apple-darwin -fcolor-diagnostics -Qunused-arguments"
CXX="clang++ -target x86_64-apple-darwin -fcolor-diagnostics -Qunused-arguments"
ac_add_options --enable-debug
ac_add_options --enable-warnings-as-errors

# Set in environment, so we can adaptively use more make jobs if distcc is
# enabled without switching mozconfigs. This assumes you're doing ./mach or make
# -f client.mk, otherwise you need to specify -j manually anyway.
[ ! -z "$MAKE_JOBS" ] || MAKE_JOBS="8"
MOZ_MAKE_FLAGS="$MOZ_MAKE_FLAGS -j$MAKE_JOBS"

# Note that ccache needs to be disabled if you wish to use distcc's "pump" mode
# (which doesn't work cross-platform)
ac_add_options --with-ccache=/usr/local/bin/ccache

# Don't try to enable distcc if DISTCC_HOSTS isn't set
if [ ! -z "$DISTCC_HOSTS" ]; then
   # If you're not using ccache, use this instead. We set this only in
   # MOZ_MAKE_FLAGS because other things look at CC and CXX to see if we're
   # using clang/gcc/msvc/etc and we don't want to confuse them.
   # MOZ_MAKE_FLAGS="$MOZ_MAKE_FLAGS CC='distcc $CC' CXX='distcc $CXX'"

   # If using ccache just set CCACHE_PREFIX to achieve the same. Again, if you
   # do |make| from the objdir directly this also needs to be set in your
   # environment for distcc to work.
   MOZ_MAKE_FLAGS="$MOZ_MAKE_FLAGS CCACHE_PREFIX=distcc"
fi

mk_add_options MOZ_MAKE_FLAGS="$MOZ_MAKE_FLAGS"
